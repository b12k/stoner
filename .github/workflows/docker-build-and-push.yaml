name: Docker build and push

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - apps/**
      - libs/**
      - configs/**
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      CACHE_REGISTRY: localhost:5000
      YARN_CACHE_FOLDER: ./.yarn-cache
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn
      -
        name: Setup Docker cache
        id: docker-cache
        uses: actions/cache@v2
        with:
          path: /tmp/docker-cache
          key: docker-${{ hashFiles('**/Dockerfile') }}
      -
        name: Setup Turbo cache
        id: turbo-cache
        uses: actions/cache@v2
        with:
          path: node_modules/.cache/turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ github.sha }}
          restore-keys: turbo-${{ github.job }}-${{ github.ref_name }}-
      -
        name: Is Turbo cached?
        if: steps.turbo-cache.outputs.cache-hit == 'true'
        run: echo "Turbo cached"
      -
        name: Is Docker cached?
        if: steps.docker-cache.outputs.cache-hit == 'true'
        run: echo "Docker cached"
      -
        name: Yarn install
        run: yarn global add turbo env-cmd
      -
        name: Setup local docker registry
        run: |
          docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-cache:/var/lib/registry registry:2 && npx wait-on tcp:5000
      -
        name: Build images
        run: yarn docker-build-ci
      -
        name: List images to tag
        id: images
        run: echo ::set-output name=no-new::$(docker images --format "{{.Repository}}" | grep stoner || echo true)
      - 
        name: Tag cached images
        if: steps.images.outputs.no-new != 'true'
        run: docker images --format "{{.Repository}}" | grep stoner | xargs -I "{}" docker tag "{}" localhost:5000/"{}"
      -
        name: List images to push
        if: steps.images.outputs.no-new != 'true'
        run: docker images --format "{{.Repository}}" | grep localhost:5000/stoner || echo false
      - 
        name: Push images to local registry
        if: steps.images.outputs.no-new != 'true'
        # if: steps.cache.outputs.cache-hit != 'true'
        run: docker images --format "{{.Repository}}" | grep localhost:5000/stoner | xargs -I "{}" docker push "{}"
